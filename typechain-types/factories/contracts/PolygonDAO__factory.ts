/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PolygonDAO,
  PolygonDAOInterface,
} from "../../contracts/PolygonDAO";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "NewMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "proposalText",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "votingEndTime",
        type: "uint256",
      },
    ],
    name: "NewProposal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "vote",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "yesVotes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "noVotes",
        type: "uint256",
      },
    ],
    name: "ProposalVoted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_proposalText",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_votingEndTime",
        type: "uint256",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "joinDAO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "bool",
        name: "isMember",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "joinDate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "string",
        name: "proposalText",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "votingEndTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "yesVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "noVotes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_vote",
        type: "bool",
      },
    ],
    name: "voteOnProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611a2d8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806335facf781161006657806335facf7814610136578063715018a6146101525780638da5cb5b1461015c578063f2fde38b1461017a578063f63d13d71461019657610093565b8063013cf08b1461009857806308ae4b0c146100cd5780630d61b519146100fe5780631614665c1461011a575b600080fd5b6100b260048036038101906100ad9190610f75565b6101a0565b6040516100c4969594939291906110a6565b60405180910390f35b6100e760048036038101906100e2919061113a565b6102a1565b6040516100f5929190611167565b60405180910390f35b61011860048036038101906101139190610f75565b6102d2565b005b610134600480360381019061012f91906111bc565b6103cb565b005b610150600480360381019061014b9190611331565b610746565b005b61015a610a67565b005b610164610a7b565b604051610171919061138d565b60405180910390f35b610194600480360381019061018f919061113a565b610aa4565b005b61019e610b28565b005b600281815481106101b057600080fd5b90600052602060002090600802016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546101f9906113d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610225906113d7565b80156102725780601f1061024757610100808354040283529160200191610272565b820191906000526020600020905b81548152906001019060200180831161025557829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16908060040154908060050154905086565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154905082565b6102da610c0e565b6000600282815481106102f0576102ef611409565b5b906000526020600020906008020190508060030160009054906101000a900460ff1615610352576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610349906114aa565b60405180910390fd5b8060020154421015610399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039090611516565b60405180910390fd5b8060050154816004015411156103c75760018160030160006101000a81548160ff0219169083151502179055505b5050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1661045a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610451906115a8565b60405180910390fd5b6000600283815481106104705761046f611409565b5b90600052602060002090600802019050806002015442106104c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bd90611614565b60405180910390fd5b610100816006018054905010610511576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050890611680565b60405180910390fd5b6000805b82600601805490508110156105b4573373ffffffffffffffffffffffffffffffffffffffff1683600601828154811061055157610550611409565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156105a157600191506105b4565b80806105ac906116cf565b915050610515565b5080156105f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ed9061178a565b60405180910390fd5b81600601339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816007018390806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff02191690831515021790555082156106c85760018260040160008282546106bc91906117aa565b925050819055506106e5565b60018260050160008282546106dd91906117aa565b925050819055505b3373ffffffffffffffffffffffffffffffffffffffff16847f82b8cb75fd367be519fd5f57abcb2dbb773381c00082e94059c4713c4dfdfc05858560040154866005015460405161073893929190611800565b60405180910390a350505050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc906115a8565b60405180910390fd5b428111610817576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080e906118a9565b60405180910390fd5b6000600280549050905060026040518061010001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020016000151581526020016000815260200160008152602001600067ffffffffffffffff81111561088957610888611206565b5b6040519080825280602002602001820160405280156108b75781602001602082028036833780820191505090505b508152602001600067ffffffffffffffff8111156108d8576108d7611206565b5b6040519080825280602002602001820160405280156109065781602001602082028036833780820191505090505b50815250908060018154018082558091505060019003906000526020600020906008020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610996929190610d58565b506040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055506080820151816004015560a0820151816005015560c08201518160060190805190602001906109f1929190610dde565b5060e0820151816007019080519060200190610a0e929190610e68565b5050503373ffffffffffffffffffffffffffffffffffffffff16817f6838db3c5996fec3de968e640e7dd8000add88d4b31235fa327d85cdb8ffce5c8585604051610a5a9291906118c9565b60405180910390a3505050565b610a6f610c0e565b610a796000610c8c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610aac610c0e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b139061196b565b60405180910390fd5b610b2581610c8c565b50565b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555042600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055503373ffffffffffffffffffffffffffffffffffffffff167fb4dcb6dd550f27b5917ebf674899ea7046ff91790c6f9f01431617ad39819db260405160405180910390a2565b610c16610d50565b73ffffffffffffffffffffffffffffffffffffffff16610c34610a7b565b73ffffffffffffffffffffffffffffffffffffffff1614610c8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c81906119d7565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610d64906113d7565b90600052602060002090601f016020900481019282610d865760008555610dcd565b82601f10610d9f57805160ff1916838001178555610dcd565b82800160010185558215610dcd579182015b82811115610dcc578251825591602001919060010190610db1565b5b509050610dda9190610f0e565b5090565b828054828255906000526020600020908101928215610e57579160200282015b82811115610e565782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610dfe565b5b509050610e649190610f0e565b5090565b82805482825590600052602060002090601f01602090048101928215610efd5791602002820160005b83821115610ece57835183826101000a81548160ff0219169083151502179055509260200192600101602081600001049283019260010302610e91565b8015610efb5782816101000a81549060ff0219169055600101602081600001049283019260010302610ece565b505b509050610f0a9190610f0e565b5090565b5b80821115610f27576000816000905550600101610f0f565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610f5281610f3f565b8114610f5d57600080fd5b50565b600081359050610f6f81610f49565b92915050565b600060208284031215610f8b57610f8a610f35565b5b6000610f9984828501610f60565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fcd82610fa2565b9050919050565b610fdd81610fc2565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561101d578082015181840152602081019050611002565b8381111561102c576000848401525b50505050565b6000601f19601f8301169050919050565b600061104e82610fe3565b6110588185610fee565b9350611068818560208601610fff565b61107181611032565b840191505092915050565b61108581610f3f565b82525050565b60008115159050919050565b6110a08161108b565b82525050565b600060c0820190506110bb6000830189610fd4565b81810360208301526110cd8188611043565b90506110dc604083018761107c565b6110e96060830186611097565b6110f6608083018561107c565b61110360a083018461107c565b979650505050505050565b61111781610fc2565b811461112257600080fd5b50565b6000813590506111348161110e565b92915050565b6000602082840312156111505761114f610f35565b5b600061115e84828501611125565b91505092915050565b600060408201905061117c6000830185611097565b611189602083018461107c565b9392505050565b6111998161108b565b81146111a457600080fd5b50565b6000813590506111b681611190565b92915050565b600080604083850312156111d3576111d2610f35565b5b60006111e185828601610f60565b92505060206111f2858286016111a7565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61123e82611032565b810181811067ffffffffffffffff8211171561125d5761125c611206565b5b80604052505050565b6000611270610f2b565b905061127c8282611235565b919050565b600067ffffffffffffffff82111561129c5761129b611206565b5b6112a582611032565b9050602081019050919050565b82818337600083830152505050565b60006112d46112cf84611281565b611266565b9050828152602081018484840111156112f0576112ef611201565b5b6112fb8482856112b2565b509392505050565b600082601f830112611318576113176111fc565b5b81356113288482602086016112c1565b91505092915050565b6000806040838503121561134857611347610f35565b5b600083013567ffffffffffffffff81111561136657611365610f3a565b5b61137285828601611303565b925050602061138385828601610f60565b9150509250929050565b60006020820190506113a26000830184610fd4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113ef57607f821691505b60208210811415611403576114026113a8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f50726f706f73616c2068617320616c7265616479206265656e2065786563757460008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b6000611494602283610fee565b915061149f82611438565b604082019050919050565b600060208201905081810360008301526114c381611487565b9050919050565b7f566f74696e6720686173206e6f7420656e646564000000000000000000000000600082015250565b6000611500601483610fee565b915061150b826114ca565b602082019050919050565b6000602082019050818103600083015261152f816114f3565b9050919050565b7f4f6e6c79206d656d626572732063616e2063616c6c20746869732066756e637460008201527f696f6e0000000000000000000000000000000000000000000000000000000000602082015250565b6000611592602383610fee565b915061159d82611536565b604082019050919050565b600060208201905081810360008301526115c181611585565b9050919050565b7f566f74696e672068617320656e64656400000000000000000000000000000000600082015250565b60006115fe601083610fee565b9150611609826115c8565b602082019050919050565b6000602082019050818103600083015261162d816115f1565b9050919050565b7f4d6178206e756d626572206f6620766f74657273207265616368656400000000600082015250565b600061166a601c83610fee565b915061167582611634565b602082019050919050565b600060208201905081810360008301526116998161165d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116da82610f3f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561170d5761170c6116a0565b5b600182019050919050565b7f596f75206861766520616c726561647920766f746564206f6e2074686973207060008201527f726f706f73616c00000000000000000000000000000000000000000000000000602082015250565b6000611774602783610fee565b915061177f82611718565b604082019050919050565b600060208201905081810360008301526117a381611767565b9050919050565b60006117b582610f3f565b91506117c083610f3f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117f5576117f46116a0565b5b828201905092915050565b60006060820190506118156000830186611097565b611822602083018561107c565b61182f604083018461107c565b949350505050565b7f566f74696e6720656e642074696d65206d75737420626520696e20746865206660008201527f7574757265000000000000000000000000000000000000000000000000000000602082015250565b6000611893602583610fee565b915061189e82611837565b604082019050919050565b600060208201905081810360008301526118c281611886565b9050919050565b600060408201905081810360008301526118e38185611043565b90506118f2602083018461107c565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611955602683610fee565b9150611960826118f9565b604082019050919050565b6000602082019050818103600083015261198481611948565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006119c1602083610fee565b91506119cc8261198b565b602082019050919050565b600060208201905081810360008301526119f0816119b4565b905091905056fea2646970667358221220cd9f0fd10c53afbc75b7d533a91a7b4af88e86ebec9a74bcd5211fe10fa6ab9b64736f6c63430008080033";

type PolygonDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonDAO__factory extends ContractFactory {
  constructor(...args: PolygonDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonDAO> {
    return super.deploy(overrides || {}) as Promise<PolygonDAO>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PolygonDAO {
    return super.attach(address) as PolygonDAO;
  }
  override connect(signer: Signer): PolygonDAO__factory {
    return super.connect(signer) as PolygonDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonDAOInterface {
    return new utils.Interface(_abi) as PolygonDAOInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonDAO {
    return new Contract(address, _abi, signerOrProvider) as PolygonDAO;
  }
}
