/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PolygonDAO,
  PolygonDAOInterface,
} from "../../../contracts/PolygonDAO.sol/PolygonDAO";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "NewMember",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "passed",
        type: "bool",
      },
    ],
    name: "ProposalClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "vote",
        type: "bool",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [],
    name: "applyForMembership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "memberAddress",
        type: "address",
      },
    ],
    name: "approveMembership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "closeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isMember",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "yesVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "noVotes",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "closed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "voteYes",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6118298061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a61461015457806379a68cf11461015e5780638da5cb5b1461017a578063a230c52414610198578063c9d27afe146101c8578063f2fde38b146101e4576100a9565b8063013cf08b146100ae5780630386a016146100e157806349c2a1a6146100fd5780635daf08ca146101195780635e1ee52a1461014a575b600080fd5b6100c860048036038101906100c39190610fcf565b610200565b6040516100d894939291906110bf565b60405180910390f35b6100fb60048036038101906100f69190610fcf565b6102d5565b005b61011760048036038101906101129190611170565b61041b565b005b610133600480360381019061012e9190610fcf565b6105ff565b6040516101419291906111fe565b60405180910390f35b61015261065c565b005b61015c61075f565b005b61017860048036038101906101739190611253565b610773565b005b610182610855565b60405161018f9190611280565b60405180910390f35b6101b260048036038101906101ad9190611253565b61087e565b6040516101bf919061129b565b60405180910390f35b6101e260048036038101906101dd91906112e2565b610967565b005b6101fe60048036038101906101f99190611253565b610c94565b005b6002818154811061021057600080fd5b906000526020600020906005020160009150905080600001805461023390611351565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90611351565b80156102ac5780601f10610281576101008083540402835291602001916102ac565b820191906000526020600020905b81548152906001019060200180831161028f57829003601f168201915b5050505050908060010154908060020154908060030160009054906101000a900460ff16905084565b6102dd610d18565b600281815481106102f1576102f0611383565b5b906000526020600020906005020160030160009054906101000a900460ff1615610350576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610347906113fe565b60405180910390fd5b60016002828154811061036657610365611383565b5b906000526020600020906005020160030160006101000a81548160ff0219169083151502179055506000600282815481106103a4576103a3611383565b5b906000526020600020906005020160020154600283815481106103ca576103c9611383565b5b906000526020600020906005020160010154119050817faffed5d901d9fbe9106721fa52653ede403c09699f9f810f6d378acc51fb50fa8260405161040f919061129b565b60405180910390a25050565b6104243361087e565b610463576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045a90611490565b60405180910390fd5b60026040518060a0016040528084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020016000815260200160008152602001600015158152602001600067ffffffffffffffff8111156104ec576104eb6114b0565b5b60405190808252806020026020018201604052801561051a5781602001602082028036833780820191505090505b5081525090806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000019080519060200190610563929190610e62565b50602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160040190805190602001906105b4929190610ee8565b505050600060016002805490506105cb919061150e565b9050807fc2c021f5d73c63c481d336fbbafec58f694fc45095f00b02d2deb8cca59afe0760405160405180910390a2505050565b6001818154811061060f57600080fd5b906000526020600020016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16905082565b600160405180604001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600015158152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690831515021790555050503373ffffffffffffffffffffffffffffffffffffffff167fb4dcb6dd550f27b5917ebf674899ea7046ff91790c6f9f01431617ad39819db260405160405180910390a2565b610767610d18565b6107716000610d96565b565b61077b610d18565b60005b600180549050811015610851578173ffffffffffffffffffffffffffffffffffffffff16600182815481106107b6576107b5611383565b5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561083e57600180828154811061081557610814611383565b5b9060005260206000200160000160146101000a81548160ff021916908315150217905550610851565b808061084990611542565b91505061077e565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600090505b60018054905081101561095c578273ffffffffffffffffffffffffffffffffffffffff16600182815481106108be576108bd611383565b5b9060005260206000200160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561093a57506001818154811061091e5761091d611383565b5b9060005260206000200160000160149054906101000a900460ff165b15610949576001915050610962565b808061095490611542565b915050610886565b50600090505b919050565b6109703361087e565b6109af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a6906115d7565b60405180910390fd5b600282815481106109c3576109c2611383565b5b906000526020600020906005020160030160009054906101000a900460ff1615610a22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1990611669565b60405180910390fd5b60005b60028381548110610a3957610a38611383565b5b906000526020600020906005020160040180549050811015610b38573373ffffffffffffffffffffffffffffffffffffffff1660028481548110610a8057610a7f611383565b5b90600052602060002090600502016004018281548110610aa357610aa2611383565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1c906116d5565b60405180910390fd5b8080610b3090611542565b915050610a25565b508015610b7f5760028281548110610b5357610b52611383565b5b90600052602060002090600502016001016000815480929190610b7590611542565b9190505550610bbb565b60028281548110610b9357610b92611383565b5b90600052602060002090600502016002016000815480929190610bb590611542565b91905055505b60028281548110610bcf57610bce611383565b5b9060005260206000209060050201600401339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16827ff2913dbe661ee2acc4a046d8fbcdc792373bda34c41c6086484b5345e5785e5f83604051610c88919061129b565b60405180910390a35050565b610c9c610d18565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0390611767565b60405180910390fd5b610d1581610d96565b50565b610d20610e5a565b73ffffffffffffffffffffffffffffffffffffffff16610d3e610855565b73ffffffffffffffffffffffffffffffffffffffff1614610d94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8b906117d3565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610e6e90611351565b90600052602060002090601f016020900481019282610e905760008555610ed7565b82601f10610ea957805160ff1916838001178555610ed7565b82800160010185558215610ed7579182015b82811115610ed6578251825591602001919060010190610ebb565b5b509050610ee49190610f72565b5090565b828054828255906000526020600020908101928215610f61579160200282015b82811115610f605782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610f08565b5b509050610f6e9190610f72565b5090565b5b80821115610f8b576000816000905550600101610f73565b5090565b600080fd5b600080fd5b6000819050919050565b610fac81610f99565b8114610fb757600080fd5b50565b600081359050610fc981610fa3565b92915050565b600060208284031215610fe557610fe4610f8f565b5b6000610ff384828501610fba565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561103657808201518184015260208101905061101b565b83811115611045576000848401525b50505050565b6000601f19601f8301169050919050565b600061106782610ffc565b6110718185611007565b9350611081818560208601611018565b61108a8161104b565b840191505092915050565b61109e81610f99565b82525050565b60008115159050919050565b6110b9816110a4565b82525050565b600060808201905081810360008301526110d9818761105c565b90506110e86020830186611095565b6110f56040830185611095565b61110260608301846110b0565b95945050505050565b600080fd5b600080fd5b600080fd5b60008083601f8401126111305761112f61110b565b5b8235905067ffffffffffffffff81111561114d5761114c611110565b5b60208301915083600182028301111561116957611168611115565b5b9250929050565b6000806020838503121561118757611186610f8f565b5b600083013567ffffffffffffffff8111156111a5576111a4610f94565b5b6111b18582860161111a565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111e8826111bd565b9050919050565b6111f8816111dd565b82525050565b600060408201905061121360008301856111ef565b61122060208301846110b0565b9392505050565b611230816111dd565b811461123b57600080fd5b50565b60008135905061124d81611227565b92915050565b60006020828403121561126957611268610f8f565b5b60006112778482850161123e565b91505092915050565b600060208201905061129560008301846111ef565b92915050565b60006020820190506112b060008301846110b0565b92915050565b6112bf816110a4565b81146112ca57600080fd5b50565b6000813590506112dc816112b6565b92915050565b600080604083850312156112f9576112f8610f8f565b5b600061130785828601610fba565b9250506020611318858286016112cd565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061136957607f821691505b6020821081141561137d5761137c611322565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f546869732070726f706f73616c20697320616c726561647920636c6f7365642e600082015250565b60006113e8602083611007565b91506113f3826113b2565b602082019050919050565b60006020820190508181036000830152611417816113db565b9050919050565b7f596f75206d7573742062652061206d656d62657220746f20637265617465206160008201527f2070726f706f73616c2e00000000000000000000000000000000000000000000602082015250565b600061147a602a83611007565b91506114858261141e565b604082019050919050565b600060208201905081810360008301526114a98161146d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061151982610f99565b915061152483610f99565b925082821015611537576115366114df565b5b828203905092915050565b600061154d82610f99565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115805761157f6114df565b5b600182019050919050565b7f596f75206d7573742062652061206d656d62657220746f20766f74652e000000600082015250565b60006115c1601d83611007565b91506115cc8261158b565b602082019050919050565b600060208201905081810360008301526115f0816115b4565b9050919050565b7f566f74696e6720697320636c6f73656420666f7220746869732070726f706f7360008201527f616c2e0000000000000000000000000000000000000000000000000000000000602082015250565b6000611653602383611007565b915061165e826115f7565b604082019050919050565b6000602082019050818103600083015261168281611646565b9050919050565b7f596f75206861766520616c726561647920766f7465642e000000000000000000600082015250565b60006116bf601783611007565b91506116ca82611689565b602082019050919050565b600060208201905081810360008301526116ee816116b2565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611751602683611007565b915061175c826116f5565b604082019050919050565b6000602082019050818103600083015261178081611744565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006117bd602083611007565b91506117c882611787565b602082019050919050565b600060208201905081810360008301526117ec816117b0565b905091905056fea2646970667358221220f50ba2a7597659eb39b2f6043a66162b9fd61ed5398e43c762fe9f9df9ea6ab564736f6c63430008080033";

type PolygonDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonDAO__factory extends ContractFactory {
  constructor(...args: PolygonDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonDAO> {
    return super.deploy(overrides || {}) as Promise<PolygonDAO>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PolygonDAO {
    return super.attach(address) as PolygonDAO;
  }
  override connect(signer: Signer): PolygonDAO__factory {
    return super.connect(signer) as PolygonDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonDAOInterface {
    return new utils.Interface(_abi) as PolygonDAOInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonDAO {
    return new Contract(address, _abi, signerOrProvider) as PolygonDAO;
  }
}
